import sqlite3
import os

os.makedirs('data', exist_ok=True)

cnx = sqlite3.connect('data/brief.db')
cursor = cnx.cursor()

# Liste des requ√™tes SQL pour cr√©er les tables
queries = [
    '''
    CREATE TABLE IF NOT EXISTS Magasins (
        id INTEGER PRIMARY KEY,
        ville TEXT NOT NULL,
        nb_salari√©s INTEGER NOT NULL
    )
    ''',
    '''
    CREATE TABLE IF NOT EXISTS Produits (
        id TEXT PRIMARY KEY,
        nom TEXT NOT NULL,
        prix DECIMAL NOT NULL,
        stock INTEGER NOT NULL
    )
    ''',
    '''
    CREATE TABLE IF NOT EXISTS Ventes (
        date TEXT NOT NULL,
        id_ref_prod TEXT NOT NULL,
        quantit√© INTEGER NOT NULL,
        id_magasin INTEGER NOT NULL,
        UNIQUE (date, id_ref_prod, id_magasin),
        FOREIGN KEY(id_ref_prod) REFERENCES Produits(id),
        FOREIGN KEY(id_magasin) REFERENCES Magasins(id)
    )
    ''',
    '''
    CREATE TABLE IF NOT EXISTS R√©sultats_CA (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        total DECIMAL
    )
    ''',
    '''
    CREATE TABLE IF NOT EXISTS R√©sultats_Magasins (
        id INTEGER PRIMARY KEY,
        id_magasin INTEGER NOT NULL,
        ventes DECIMAL,
        FOREIGN KEY(id_magasin) REFERENCES Magasins(id)
    )
    ''',
    '''
    CREATE TABLE IF NOT EXISTS R√©sultats_Produits (
        id INTEGER PRIMARY KEY,
        id_produit TEXT,
        ventes DECIMAL,
        FOREIGN KEY(id_produit) REFERENCES Produits(id)
    )
    '''
]

# Ex√©cution des requ√™tes pour cr√©er les tables
for query in queries:
    cursor.execute(query)

# Cr√©ation des indices pour les cl√©s √©trang√®res dans la table Ventes
cursor.execute('CREATE INDEX IF NOT EXISTS idx_id_ref_prod ON Ventes(id_ref_prod);')
cursor.execute('CREATE INDEX IF NOT EXISTS idx_id_magasin ON Ventes(id_magasin);')

# Commit pour sauvegarder les changements
cnx.commit()

# V√©rification de la validit√© des donn√©es dans la table Ventes
cursor.execute('''
    SELECT v.date, v.id_ref_prod, p.nom AS produit, v.id_magasin, m.ville AS magasin
    FROM Ventes v
    JOIN Produits p ON v.id_ref_prod = p.id
    JOIN Magasins m ON v.id_magasin = m.id
''')
valid_ventes = cursor.fetchall()

if valid_ventes:
    print("‚úÖ Donn√©es valides dans la table Ventes :")
    for vente in valid_ventes:
        print(vente)
else:
    print("‚ùå Aucune donn√©e valide dans la table Ventes.")

# Sauvegarde du sch√©ma dans un fichier schema.sql
with open('data/db.sql', 'w') as f:
    for query in queries:
        f.write(query.strip() + ';\n\n')

print("‚úÖ Base de donn√©es cr√©√©e avec succ√®s.")
print("üìÑ Fichier db.sql g√©n√©r√© dans le dossier data/")

# Fermeture de la connexion √† la base de donn√©es
cnx.close()